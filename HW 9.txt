'number' + 3 + 3 + 3 // "number33"
1)'3' перетворюється на string та об'єднується з 'number' - результат: number3
2)'3' перетворюється на string та об'єднується з 'number3' - результат: number33

null + 3 // 3
1) null буде перетворено в число 0.
2) Потім 0 буде складено з 3.

5 && "qwerty" // "qwerty"
1) Повертається останнє значення, оскільки обидва операнди істинні.

+'40' + +'2' + "hillel"; // "42hillel"
1) string '40' , '2' перетворюються у number і складаються - 42
2) 42 перетворюється у string і конкатенуються з string "hillel".

'10' - 5 === 6; // false
1) '10' перетворюються у number 10
2) Потім 5 віднімається від 10, і порівнюється з числом 6.

true + false // 1
1) true буде перетворено на число 1, а false на 0.
2) Потім вони будуть складені.

'4px' - 3 // NaN
1) Неявне перетворення '4px' у число неможливе, тому результат буде NaN.

'4' - 3 // 1
1) string '4' буде перетворено в number 4.
2) Потім 3 віднімається від 4.

'6' + 3 ** 0; // "61"
1) спочатку 3 зводиться у ступінь 0, що дорівнює 1.
2) Потім стрінга '6' конкатенується з number 1. При конкатенації 1 перетворюється у стрінг. - "61"

12 / '6'  // 2
1) sting '6' буде перетворено в number 6.
2) 12 ділиться на 6.

'10' + (5 === 6); // "10false"
1) Порівняння 5 і 6 буде false.
2) false перетворюється в стрінг і конкатенується з стрінгою '10'.

null == '' // false
1) null не дорівнює порожньому рядку. - false

3 ** (9 / 3); // 27
1) Спочатку виконується ділення 9 на 3.  9.
2) 3 зводиться ступінь 3.

!!'false' == !!'true' // false.
1) Обидва !!'false' і !!'true' перетворюються на bool значення.
2) Вони порівнюються.

0 || '0' && 1 // 1
1) Перший операнд 0 розглядається як хибне значення (0 = false), тому повертається результат виразу '0' && 1.
2) Результат цього виразу буде 1, оскільки обидва операнди істинні, повертаєтся другий операнд

(+null == false) < 1; // false
1) Вираз (+null == false) перетворюється на true, оскільки null перетворюється на 0, а false теж дорівнює 0.
2) Потім true перетворюється в number 1.
3) 1 порівнюється чи меньше воно чим 1. Не меньше - false.

false && true || true // true
1) Спочатку виконується операція &&, яка повертає false, оскільки один з операндів false.
2) false || true поверне true.

false && (false || true); // false
1) Виконується операція || яка поверне true.
2) false && true поверне false.

(+null == false) < 1 ** 5; // false
1) (+null == false) перетворюється на true (1), оскільки null перетворюється на 0, а false теж дорівнює 0.
2) 1 ** 5 = 1
3) 1 < 1 = false